# Copyright (C) 2020 Damien Dart, <damiendart@pobox.com>.
# This file is distributed under the MIT licence. For more information,
# please refer to the accompanying "LICENCE" file.
---

version: '3'

output: 'prefixed'

env:
  RELEASE_TIMESTAMP:
    sh: 'date +%Y%m%d%H%M%S'

tasks:
  default:
    deps:
      - task: 'ci'

  build:
    cmds:
      - task: 'build:css'
      - task: 'build:javascript'
    desc: 'Run all building-related tasks'

  build:css:
    cmds:
      - 'node_modules/.bin/sass --no-source-map -s compressed resources/sass/app.scss {{ .OUTPUT_FILE }}'
      - 'node_modules/.bin/postcss --no-map --replace --use autoprefixer --use cssnano -- {{ .OUTPUT_FILE }}'
    desc: 'Build CSS files with Sass and friends'
    vars:
      OUTPUT_FILE: 'public/assets/app.css'

  build:javascript:
    cmds:
      - 'node_modules/.bin/esbuild resources/js/app.js --bundle --log-level=warning --outfile={{ .OUTPUT_FILE }}'
      - 'node_modules/.bin/babel {{ .OUTPUT_FILE }} --out-file {{ .OUTPUT_FILE }} --presets=@babel/preset-env'
      - 'node_modules/.bin/uglifyjs --compress --mangle -o {{ .OUTPUT_FILE }} -- {{ .OUTPUT_FILE }}'
    desc: 'Build (IE11-compatible) JavaScript files with esbuild and friends'
    vars:
      OUTPUT_FILE: 'public/assets/app.js'

  ci:
    cmds:
      - task: 'clean'
      - task: 'directories'
      - task: 'dependencies'
      - task: 'key-generate'
      - task: 'build'
      - task: 'lint'
      - task: 'test'
    desc: 'Run all CI-related tasks'

  clean:
    cmds:
      - 'rm -fr node_modules public/assets release vendor'
    desc: 'Delete all buildable files and third-party dependencies'

  directories:
    cmds:
      - 'mkdir -p bootstrap/cache'
      - 'mkdir -p storage/app/public'
      - 'mkdir -p storage/clockwork'
      - 'mkdir -p storage/framework/{cache/data,sessions,testing,views}'
      - 'mkdir -p storage/logs'
      - cmd: 'echo NOTE: You may need to update owners and permissions of the freshly-created folders!'
        silent: true
    desc: 'Create Laravel cache and storage directories'

  dependencies:
    cmds:
      - task: 'dependencies:php'
      - task: 'dependencies:javascript'
    desc: 'Run all dependency-installing-related tasks'

  dependencies:javascript:
    cmds:
      # <http://www.tiernok.com/posts/2019/faster-npm-installs-during-ci/>
      - 'npm ci --prefer-offline --no-audit'
    env:
      CI: true
    desc: 'Install JavaScript dependencies'

  dependencies:php:
    cmds:
      - 'composer install --no-ansi --no-interaction --no-progress'
    desc: 'Install PHP dependencies for building, development, and testing'

  key-generate:
    cmds:
      - 'cp -n .env.example .env'
      - './private/bin/artisan key:generate'
    desc: 'Generate and set an application key'

  lint:
    cmds:
      - task: 'lint:javascript'
      - task: 'lint:php'
    desc: 'Run all linting-related tasks'

  lint:javascript:
    cmds:
      - 'node_modules/.bin/eslint resources/js/'
    desc: 'Lint JavaScript files with ESLint'

  lint:php:
    cmds:
      - 'vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run --diff'
    desc: 'Lint PHP scripts with PHP Coding Standards Fixer'

  release:
    cmds:
      - cmd: |
          {{ if .GIT_STATUS }}
            echo 'Working directory is dirty! Aborting.'
            exit 1
          {{ end }}
        silent: true
      - task: 'ci'
      - 'mkdir -p release'
      - >-
        tar -cvf release/release.tgz
        ./composer.*
        ./{app,config,database,private,public,routes}/
        ./bootstrap/app.php
        ./resources/{lang,views}/
      - 'envsubst < deployment/variables.yml > release/release.yml'
      - 'cp deployment/pre-install-tasks.yml release/pre-install-tasks.yml'
    desc: 'Create release archive and metadata for deployment'
    env:
      RELEASE_GIT_SHA:
        sh: 'git log -n 1 --format=%H'
    vars:
      GIT_STATUS:
        sh: 'git status --porcelain'

  test:
    cmds:
      - task: 'test:php'
    desc: 'Run all testing-related tasks'

  test:php:
    cmds:
      - 'vendor/bin/phpunit --testdox'
    desc: 'Run PHP tests with PHPUnit'
